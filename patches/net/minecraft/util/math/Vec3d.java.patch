--- ../src-base/minecraft/net/minecraft/util/math/Vec3d.java
+++ ../src-work/minecraft/net/minecraft/util/math/Vec3d.java
@@ -1,9 +1,6 @@
 package net.minecraft.util.math;
 
 import javax.annotation.Nullable;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
-
 public class Vec3d
 {
     public static final Vec3d ZERO = new Vec3d(0.0D, 0.0D, 0.0D);
@@ -54,7 +51,6 @@
         return this.x * vec.x + this.y * vec.y + this.z * vec.z;
     }
 
-    @SideOnly(Side.CLIENT)
     public Vec3d crossProduct(Vec3d vec)
     {
         return new Vec3d(this.y * vec.z - this.z * vec.y, this.z * vec.x - this.x * vec.z, this.x * vec.y - this.y * vec.x);
@@ -114,7 +110,6 @@
         return (double)MathHelper.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
     }
 
-    @SideOnly(Side.CLIENT)
     public double lengthSquared()
     {
         return this.x * this.x + this.y * this.y + this.z * this.z;
@@ -239,13 +234,11 @@
         return new Vec3d(d0, d1, d2);
     }
 
-    @SideOnly(Side.CLIENT)
     public static Vec3d fromPitchYawVector(Vec2f p_189984_0_)
     {
         return fromPitchYaw(p_189984_0_.x, p_189984_0_.y);
     }
 
-    @SideOnly(Side.CLIENT)
     public static Vec3d fromPitchYaw(float p_189986_0_, float p_189986_1_)
     {
         float f = MathHelper.cos(-p_189986_1_ * 0.017453292F - (float)Math.PI);
